name: 'Check Runner Interruption'
description: 'Checks if any GitHub Actions jobs were interrupted by a spot instance shutdown'

inputs:
  github-token:
    description: 'GitHub token for API access'
    required: true
    default: ${{ github.token }}

outputs:
  was_interrupted:
    description: 'Boolean indicating if any job was interrupted by a spot instance shutdown'
    value: ${{ steps.check_runner.outputs.was_interrupted }}

runs:
  using: "composite"
  steps:
    - name: Check runner interruption
      id: check_runner
      uses: actions/github-script@v7
      with:
        github-token: ${{ inputs.github-token }}
        debug: true
        script: |
          const { owner, repo } = context.repo;
          const run_id = context.runId;
          
          console.log('Context:', { owner, repo, run_id });
          
          // Get the jobs for this run
          const { data: jobsData } = await github.rest.actions.listJobsForWorkflowRun({
            owner,
            repo,
            run_id
          });
          
          // Find all completed jobs that failed
          const failedJobs = jobsData.jobs.filter(job => 
            job.status === 'completed' && job.conclusion === 'failure'
          );
          
          console.log(`Found ${failedJobs.length} failed jobs`);
          
          // Check each failed job for shutdown annotations
          let isSpotInterruption = false;
          
          for (const job of failedJobs) {
            console.log(`Checking annotations for job: ${job.name} (${job.id})`);
            
            try {
              const { data: annotations } = await github.rest.checks.listAnnotations({
                owner,
                repo,
                check_run_id: job.id
              });
              
              // Log the full annotation data for debugging
              console.log('Annotations:', JSON.stringify(annotations, null, 2));
              
              const jobInterrupted = annotations.some(annotation => {
                // Check both title and message fields
                const titleMatch = annotation.title?.toLowerCase().includes('shutdown signal');
                const messageMatch = annotation.message?.toLowerCase().includes('shutdown signal');
                
                if (titleMatch || messageMatch) {
                  console.log('Found shutdown signal in annotation:', annotation);
                }
                
                return titleMatch || messageMatch;
              });
              
              if (jobInterrupted) {
                console.log(`Job ${job.name} was interrupted by spot instance shutdown`);
                isSpotInterruption = true;
                break;
              }
            } catch (error) {
              console.error(`Error fetching annotations for job ${job.name}:`, error);
              // Continue checking other jobs even if one fails
              continue;
            }
          }
          
          // Convert to string to ensure proper output
          const result = isSpotInterruption.toString();
          console.log('Setting output was_interrupted:', result);
          core.setOutput('was_interrupted', result);
